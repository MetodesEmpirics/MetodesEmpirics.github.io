ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..)
, bins=50) +
geom_density()
set.seed(333)
library(ggplot2)
samples <- rnorm(n = 5000, mean = 20, sd = 3)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..)
, bins=50) +
geom_density()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..)
, bins=50,
fill = 'white') +
geom_density() +
theme_minimal()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples <- rbinom(n = 1, p = 0.5)
samples <- rbinom(size = 1, p = 0.5)
samples <- rbinom(n = 1, size = 5000, p = 0.5)
samples
samples <- rbinom(n = 5000, size = 1, p = 0.5)
samples
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(
bins=50,
color = 1,
fill = 'white') +
theme_minimal()
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(
bins=2,
color = 1,
fill = 'white') +
theme_minimal()
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(
bins=50,
color = 1,
fill = 'white') +
theme_minimal()
set.seed(333)
library(ggplot2)
samples <- rpois(n = 5000, lambda = 20)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
set.seed(333)
library(ggplot2)
samples <- rnorm(n = 5000, mean = 20, sd = 3)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples
set.seed(333)
library(ggplot2)
samples <- rpois(n = 5000, lambda = 20)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 8)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 8+8) #1 draw from Poisson distribution with lambda = 45
print(mean(sample1_informal) - mean(sample1_formal))
sample1_informal
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 55)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 45) #1 draw from Poisson distribution with lambda = 45
print(mean(sample1_informal) - mean(sample1_formal))
sample1_informal
sample1_formal
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(1111) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(1121) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
sample2_informal
sample2_formal
set.seed(101) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 8
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 8+8
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(101) #this makes the random draws be the same each time
sample4_informal <- rpois(n = 40, lambda = 55)   #40 draw from Poisson distribution with lambda = 55
sample4_formal <-  rpois(n = 40, lambda = 45) #40 draw from Poisson distribution with lambda = 45
print(mean(sample4_informal) - mean(sample4_formal))
set.seed(101) #this makes the random draws be the same each time
sample5_informal <- rpois(n = 100, lambda = 55)   #100 draws from Poisson distribution with lambda = 55
sample5_formal <-  rpois(n = 100, lambda = 45) #100 draws from Poisson distribution with lambda = 45
print(mean(sample5_informal) - mean(sample5_formal))
set.seed(101) #this makes the random draws be the same each time
sample6_informal <- rpois(n = 1000, lambda = 55)   #1000 draws from Poisson distribution with lambda = 55
sample6_formal <-  rpois(n = 1000, lambda = 45) #1000 draws from Poisson distribution with lambda = 45
print(mean(sample6_informal) - mean(sample6_formal))
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 55)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 45) #1 draw from Poisson distribution with lambda = 45
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 55)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 45) #1 draw from Poisson distribution with lambda = 45
print(mean(sample1_informal) - mean(sample1_formal))
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 55
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 45
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 55
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 45
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 55
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 45
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(11) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 55
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 45
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(191) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 55
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 45
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(101) #this makes the random draws be the same each time
sample4_informal <- rpois(n = 40, lambda = 55)   #40 draw from Poisson distribution with lambda = 55
sample4_formal <-  rpois(n = 40, lambda = 45) #40 draw from Poisson distribution with lambda = 45
print(mean(sample4_informal) - mean(sample4_formal))
set.seed(101) #this makes the random draws be the same each time
sample5_informal <- rpois(n = 100, lambda = 55)   #100 draws from Poisson distribution with lambda = 55
sample5_formal <-  rpois(n = 100, lambda = 45) #100 draws from Poisson distribution with lambda = 45
print(mean(sample5_informal) - mean(sample5_formal))
set.seed(101) #this makes the random draws be the same each time
sample6_informal <- rpois(n = 1000, lambda = 55)   #1000 draws from Poisson distribution with lambda = 55
sample6_formal <-  rpois(n = 1000, lambda = 45) #1000 draws from Poisson distribution with lambda = 45
print(mean(sample6_informal) - mean(sample6_formal))
install.packages(c("dplyr", "ggplot2", "ggpubr", "readr", "reshape2"))
pitch_model3 <- lm(formula = pitch ~ 1 + gender * context,
data    = df)
### Packages we will use ###
library(readr)
library(dplyr)
library(ggplot2)
### ### ###
df <- read_csv("https://tinyurl.com/polite-data") #download data
glimpse(df) #get a look at the data
df
pitch_model3 <- lm(formula = pitch ~ 1 + gender * context,
data    = df)
m <- lm(formula = pitch ~ 1 + gender + context + gender:context, data=df)
m
pitch_model3
set.seed(121)
#df <- read_csv("https://tinyurl.com/polite-data") #download data
#df_male <- df %>% filter(gender == 'M', context=='pol')
ages <- rpois(n=100, lambda=20)
pitch <- 160 - (3 * ages) + rnorm(n=100,mean=0,sd=30)
df <- data.frame(ages = ages, pitch = pitch)
ggplot(df, aes(x = ages, y = pitch)) +
geom_point() +
geom_abline(intercept = 110, slope = 1.5, col='indianred', size=2) +
geom_text(aes(x = 25, y = 165), label = 'y = 110 + 1.5 * x', size=10, col='indianred') +
theme_minimal(base_size=25) +
xlab('edad (x)') +
ylab('tono (y)')
set.seed(121)
ages <- rpois(n=100, lambda=20)
pitch <- 160 - (3 * ages) + rnorm(n=100,mean=0,sd=30)
df <- data.frame(ages = ages, pitch = pitch)
ggplot(df, aes(x = ages, y = pitch)) +
geom_point() +
theme_minimal(base_size=25) +
xlab('edad (x)') +
ylab('tono (y)')
df
df$ages.cent <- df$ages - mean(df$ages)
lm(df$pitch ~ df$ages.cent)
mean(df$ages)
df$ages.cent <- df$ages - mean(df$ages)
lm(df$pitch ~ df$ages.cent)
xaringan:::inf_mr()
a <- summary(pitch_model)
a
str(a)
coef(pitch_model)
a
a$coefficients
a$residuals
a$call
a$residuals
summary$Residuals[1:10]
summary <- summary(pitch_model)
summary$Residuals[1:10]
summary <- summary(pitch_model)
summary$Residuals[1:10,]
summary <- summary(pitch_model)
summary$Residuals[,1:10]
summary <- summary(pitch_model)
summary$Residuals
summary <- summary(pitch_model)
summary$residuals[1:10]
summary$coefficients
summary
xaringan:::inf_mr()
pitch_model1
coef(pitch_model1)
a$r.squared
### Packages we will use ###
library(dplyr)
library(ggplot2)
### ### ###
df <- read_csv('dyads.csv') #download data
glimpse(df) #get a look at the data
ggplot(df, aes(x = gestures, fill = context)) +
geom_histogram(bins=70, alpha=0.6, position='identity') +
theme_minimal(base_size=20)
ggplot(df, aes(x = gestures, fill = language)) +
geom_histogram(bins=50, alpha=0.6, position='identity') +
theme_minimal(base_size=20)
ggplot(df, aes(x = gestures, fill = gender)) +
geom_histogram(bins=50, alpha=0.6, position='identity') +
theme_minimal(base_size=20)
gestures_context <- lm(formula = gestures ~ 1 + context,
data    = df)
summary(gestures_context)
gestures_context <- glm(formula = gestures ~ 1 + context,
data    = df)
summary(gestures_context)
gestures_context <- glm(formula = gestures ~ 1 + context,
data    = df,
family = 'Poisson')
gestures_context <- glm(formula = gestures ~ 1 + context,
data    = df,
family = 'poisson')
summary(gestures_context)
gestures_context
#Notice that we're now using a function called glm()
#Notice that we now specify the family of the model (Poisson)
#Notice that we now specify the link function (log)
gestures_context <- glm(formula = gestures ~ 1 + context,
data    = df,
family  = poisson(link = 'log')
)
summary(gestures_context)
3.99 - 0.178
df
df %>% filter(context == 'prof') %>% select(gestures) %>% pull() %>% mean()
df %>% filter(context == 'prof') %>% select(gestures) %>% pull() %>% mean() %>% exp()
df %>% filter(context == 'prof') %>% select(gestures) %>% pull() %>% mean()
exp(3.812)
exp(3.99 - 0.178)
gestures_context <- glm(formula = gestures ~ 1 + language,
data    = df,
family  = poisson(link = 'log')
)
gestures_lang <- glm(formula = gestures ~ 1 + language,
data    = df,
family  = poisson(link = 'log')
)
summary(gestures_lang)
gestures_context <- glm(formula = gestures ~ 1 + gender,
data    = df,
family  = poisson(link = 'log')
)
summary(gestures_context)
gestures_all <- glm(formula = gestures ~ 1 + context + language + gender,
data    = df,
family  = poisson(link = 'log')
)
summary(gestures_all)
xaringan:::inf_mr()
library(tm)
install.packages('tm')
library(tm)
data("AssociatedPress", package = "topicmodels")
library(tm)
data("AssociatedPress")
library(tm)
install.packages('topicmodels')
library(tm)
data("AssociatedPress", package = "topicmodels")
library(tm)
data("AssociatedPress", package = "topicmodels")
head(AssociatedPress)
library(tm)
data("AssociatedPress", package = "topicmodels")
AssociatedPress
library(tm)
library(knitr)
data("AssociatedPress", package = "topicmodels")
include_graphics('ap-story.png')
library(stringr)
first_par <- 'MEXICO CITY (AP) — The Mexican government said Tuesday that COVID-19 has passed from a pandemic to an endemic stage in Mexico, meaning authorities will treat it as a seasonally recurring disease.'
str_split(first_par, pattern = " ")
```
first_par <- 'MEXICO CITY (AP) — The Mexican government said Tuesday that COVID-19 has passed from a pandemic to an endemic stage in Mexico, meaning authorities will treat it as a seasonally recurring disease.'
first_par <- 'MEXICO CITY (AP)'
first_par <- 'MEXICO CITY (AP) — The Mexican government said Tuesday that COVID-19 has passed from a pandemic to an endemic stage in Mexico, meaning authorities will treat it as a seasonally recurring disease.'
first_par
str_split(first_par, pattern = " ")
first_par <- 'MEXICO CITY (AP) — The Mexican government said Tuesday that COVID-19 has passed from a pandemic to an endemic stage in Mexico, meaning authorities will treat it as a seasonally recurring disease.'
tolower(first_par, pattern = " ")
tolower(tokenized_firt_par)
tolower('Aaa')
tolower(c('Aaa'))
tokenized_first_par
tolower(tokenized_first_par)
str_to_lower(tokenized_first_par)
str_to_lower(tokenized_first_par)
tokenized_first_par
tokenized_first_par[[1]]
tolower(tokenized_first_par[[1]])
tokenized_first_par
library(stringr)
first_par <- 'MEXICO CITY (AP) — The Mexican government said Tuesday that COVID-19 has passed from a pandemic to an endemic stage in Mexico, meaning authorities will treat it as a seasonally recurring disease.'
tokenized_first_par <- str_split(first_par, pattern = " ")[[1]]
tokenized_first_par
tolower(tokenized_firt_par)
tolower(tokenized_first_par)
AssociatedPress
library(tidytext)
install.packages('tidytext')
library(tidytext)
tidy(AssociatedPress)
library(tidytext)
tidy(AssociatedPress) %>% head()
library(tidytext)
AP_corpus <- tidy(AssociatedPress)
head(AP_corpus)
head(AP_corpus)
glimpse(AP_corpus)
head(AP_corpus)
colnames(AP_corpus)
head(AP_corpus)
xaringan:::inf_mr()
mean(df$pitch)
median(df$pitch)
quantile(df$pitch)
mean(df_m$pitch)
median(df_m$pitch)
sd(df$pitch)
quantile(df$pitch)
mean(df$pitch)
median(df$pitch)
sd(df$pitch)
quantile(df$pitch)
mean(df_m$pitch)
mean(df_f$pitch)
median(df_m$pitch)
median(df_f$pitch)
mean(df_m$pitch)
mean(df_f$pitch)
median(df_m$pitch)
median(df_f$pitch)
mean(df_f$pitch)
mean(df_m$pitch)
coef(pitch_model1)
mean(df_f$pitch)
mean(df_m$pitch)
mean(df_f$pitch)
mean(df_m$pitch)
mean(df_pol$pitch)
mean(df_inf$pitch)
median(df_pol$pitch)
median(df_inf$pitch)
sd(df_pol$pitch)
sd(df_inf$pitch)
quantile(df_pol$pitch)
quantile(df_inf$pitch)
set.seed(12)
grupo_A <- rbinom(n = 1, mean = 160, sd = 5)
set.seed(12)
grupo_A <- rnorm(n = 1, mean = 160, sd = 5)
grupo_B <- rnorm(n = 1, mean = 159, sd = 4)
lm(grupo_A ~ grupo_B)
set.seed(12)
obs <- 1
datos_A <-   rnorm(n = obs, mean = 160, sd = 5)
datos_B <- rnorm(n = obs, mean = 159, sd = 4)
id_grupo <- c(rep('A',obs), rep('B', obs))
df <- data.frame(datos   = c(datos_A,datos_B),
grupo  = id_grupo)
lm(formula = datos ~ grupo, data = df)
set.seed(12)
obs <- 1
datos_A <-   rnorm(n = obs, mean = 160, sd = 5)
datos_B <- rnorm(n = obs, mean = 159, sd = 4)
id_grupo <- c(rep('A',obs), rep('B', obs))
df <- data.frame(datos   = c(datos_A,datos_B),
grupo  = id_grupo)
summary(lm(formula = datos ~ grupo, data = df))
set.seed(12)
obs <- 5
datos_A <-   rnorm(n = obs, mean = 160, sd = 5)
datos_B <- rnorm(n = obs, mean = 159, sd = 4)
id_grupo <- c(rep('A',obs), rep('B', obs))
df <- data.frame(datos   = c(datos_A,datos_B),
grupo  = id_grupo)
summary(lm(formula = datos ~ grupo, data = df))
summary(lm(datos ~ grupo))
summary(lm(datos ~ grupo, data = df))
set.seed(12)
obs <- 100000000
datos_A <-   rnorm(n = obs, mean = 160, sd = 5)
datos_B <- rnorm(n = obs, mean = 159, sd = 4)
id_grupo <- c(rep('A',obs), rep('B', obs))
df <- data.frame(datos   = c(datos_A,datos_B),
grupo  = id_grupo)
df
set.seed(12)
library(xaringanBuilder)
build_pdf("slides.Rmd")
df
df <- read.csv("https://tinyurl.com/polite-data")
head(df)
library(dplyr)
hist(df$pitch)
hist(df$pitch)
plot(df$pitch ~ df$gender)
scatter(df$pitch ~ df$gender)
scatter(df$pitch, df$gender)
plot(df$pitch, df$gender)
plot(y = df$pitch, x = df$gender)
plot(y = df$pitch, x = df$context)
library(xaringanBuilder)
build_pdf('slides.Rmd')
library(xaringanBuilder)
build_pdf('slides.Rmd')
