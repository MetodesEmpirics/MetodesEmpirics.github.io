set.seed(101) #this makes the random draws be the same each time
sample5_spanish <- rpois(n = 100, lambda = 8)   #1 draw from Poisson distribution with lambda = 8
sample5_german <-  rpois(n = 100, lambda = 8+8) #1 draw from Poisson distribution with lambda = 8+8
mean(sample5_german) - mean(sample5_spanish)
set.seed(101) #this makes the random draws be the same each time
sample5_spanish <- rpois(n = 1000, lambda = 8)   #1 draw from Poisson distribution with lambda = 8
sample5_german <-  rpois(n = 1000, lambda = 8+8) #1 draw from Poisson distribution with lambda = 8+8
mean(sample5_german) - mean(sample5_spanish)
set.seed(101) #this makes the random draws be the same each time
sample6_spanish <- rpois(n = 1000, lambda = 8)   #1 draw from Poisson distribution with lambda = 8
sample6_german <-  rpois(n = 1000, lambda = 8+8) #1 draw from Poisson distribution with lambda = 8+8
mean(sample6_german) - mean(sample6_spanish)
rnorm(n = 1000, mean = 20, sd = 3)
sample_dataframe <- as.data.frame(value = samples)
samples <- rnorm(n = 1000, mean = 20, sd = 3)
sample_dataframe <- as.data.frame(value = samples)
as.data.frame()
sample_dataframe <- as.data.frame(samples)
sample_data_frame
sample_dataframe
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram()
library(ggplot2)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(bins=50)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(bins=50) +
geom_density()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(y = ..density.., bins=50) +
geom_density()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(y = ..density..) +
geom_density()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..)
, bins=50) +
geom_density()
set.seed(333)
library(ggplot2)
samples <- rnorm(n = 5000, mean = 20, sd = 3)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..)
, bins=50) +
geom_density()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..)
, bins=50,
fill = 'white') +
geom_density() +
theme_minimal()
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples <- rbinom(n = 1, p = 0.5)
samples <- rbinom(size = 1, p = 0.5)
samples <- rbinom(n = 1, size = 5000, p = 0.5)
samples
samples <- rbinom(n = 5000, size = 1, p = 0.5)
samples
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(
bins=50,
color = 1,
fill = 'white') +
theme_minimal()
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(
bins=2,
color = 1,
fill = 'white') +
theme_minimal()
samples <- rbinom(n = 5000, size = 1, p = 0.5) #5000 independent experiments with a single fair coin flip
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(
bins=50,
color = 1,
fill = 'white') +
theme_minimal()
set.seed(333)
library(ggplot2)
samples <- rpois(n = 5000, lambda = 20)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
set.seed(333)
library(ggplot2)
samples <- rnorm(n = 5000, mean = 20, sd = 3)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples
set.seed(333)
library(ggplot2)
samples <- rpois(n = 5000, lambda = 20)
sample_dataframe <- as.data.frame(samples)
ggplot(data = sample_dataframe,
aes(x = samples)
) +
geom_histogram(aes(y = ..density..),
bins=50,
color = 1,
fill = 'white') +
geom_density() +
theme_minimal()
samples
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 8)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 8+8) #1 draw from Poisson distribution with lambda = 45
print(mean(sample1_informal) - mean(sample1_formal))
sample1_informal
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 55)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 45) #1 draw from Poisson distribution with lambda = 45
print(mean(sample1_informal) - mean(sample1_formal))
sample1_informal
sample1_formal
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(1111) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(1121) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 8
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 8+8
print(mean(sample2_informal) - mean(sample2_formal))
sample2_informal
sample2_formal
set.seed(101) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 8
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 8+8
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(101) #this makes the random draws be the same each time
sample4_informal <- rpois(n = 40, lambda = 55)   #40 draw from Poisson distribution with lambda = 55
sample4_formal <-  rpois(n = 40, lambda = 45) #40 draw from Poisson distribution with lambda = 45
print(mean(sample4_informal) - mean(sample4_formal))
set.seed(101) #this makes the random draws be the same each time
sample5_informal <- rpois(n = 100, lambda = 55)   #100 draws from Poisson distribution with lambda = 55
sample5_formal <-  rpois(n = 100, lambda = 45) #100 draws from Poisson distribution with lambda = 45
print(mean(sample5_informal) - mean(sample5_formal))
set.seed(101) #this makes the random draws be the same each time
sample6_informal <- rpois(n = 1000, lambda = 55)   #1000 draws from Poisson distribution with lambda = 55
sample6_formal <-  rpois(n = 1000, lambda = 45) #1000 draws from Poisson distribution with lambda = 45
print(mean(sample6_informal) - mean(sample6_formal))
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 55)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 45) #1 draw from Poisson distribution with lambda = 45
set.seed(101) #this makes the random draws be the same each time
sample1_informal <- rpois(n = 1, lambda = 55)   #1 draw from Poisson distribution with lambda = 55
sample1_formal <-  rpois(n = 1, lambda = 45) #1 draw from Poisson distribution with lambda = 45
print(mean(sample1_informal) - mean(sample1_formal))
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 55
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 45
set.seed(11) #this makes the random draws be the same each time
sample2_informal <- rpois(n = 5, lambda = 55)   #5 draw from Poisson distribution with lambda = 55
sample2_formal <-  rpois(n = 5, lambda = 45) #5 draw from Poisson distribution with lambda = 45
print(mean(sample2_informal) - mean(sample2_formal))
set.seed(101) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 55
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 45
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(11) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 55
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 45
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(191) #this makes the random draws be the same each time
sample3_informal <- rpois(n = 15, lambda = 55)   #15 draw from Poisson distribution with lambda = 55
sample3_formal <-  rpois(n = 15, lambda = 45) #15 draw from Poisson distribution with lambda = 45
print(mean(sample3_informal) - mean(sample3_formal))
set.seed(101) #this makes the random draws be the same each time
sample4_informal <- rpois(n = 40, lambda = 55)   #40 draw from Poisson distribution with lambda = 55
sample4_formal <-  rpois(n = 40, lambda = 45) #40 draw from Poisson distribution with lambda = 45
print(mean(sample4_informal) - mean(sample4_formal))
set.seed(101) #this makes the random draws be the same each time
sample5_informal <- rpois(n = 100, lambda = 55)   #100 draws from Poisson distribution with lambda = 55
sample5_formal <-  rpois(n = 100, lambda = 45) #100 draws from Poisson distribution with lambda = 45
print(mean(sample5_informal) - mean(sample5_formal))
set.seed(101) #this makes the random draws be the same each time
sample6_informal <- rpois(n = 1000, lambda = 55)   #1000 draws from Poisson distribution with lambda = 55
sample6_formal <-  rpois(n = 1000, lambda = 45) #1000 draws from Poisson distribution with lambda = 45
print(mean(sample6_informal) - mean(sample6_formal))
install.packages(c("dplyr", "ggplot2", "ggpubr", "readr", "reshape2"))
df
df
### Packages we will use ###
library(readr)
library(dplyr)
### ### ###
df <- read_csv("https://tinyurl.com/polite-data") #download data
glimpse(df) #get a look at the data
df
plot(subject,pitch)
ggplot(df, aes(x = gender, y = pitch) +
)
ggplot(df, aes(x = gender, y = pitch)) +
geom_histogram()
library(ggplot2)
ggplot(df, aes(x = gender, y = pitch)) +
geom_histogram()
ggplot(df, aes(x = pitch, y = gender)) +
geom_histogram()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=50) +
theme_minimal()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=100, alpha=0.6) +
theme_minimal()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.7) +
theme_minimal()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.3) +
theme_minimal()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.7, position='identity') +
theme_minimal()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.5, position='identity') +
theme_minimal()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.6, position='identity') +
theme_minimal()
summary(df)
head(df)
df <- df %>%
mutate(gender = ifelse(gender = 'M',0,1)) #change 'M' into a 0 and 'F' into 1
df <- df %>%
mutate(gender = ifelse(gender == 'M',0,1)) #change 'M' into a 0 and 'F' into 1
glimpse(df) #check if this worked as intended
linear_model <- lm(formula = pitch ~ 1 + gender)
linear_model <- lm(formula = pitch ~ 1 + gender,
data    = df)
linear_model
summary(linear_model)
linear_model
df %>%
filter(gender == 0) %>% #only female subjects
select(pitch) %>%
mean()
df %>%
filter(gender == 0)# %>% #only female subjects
df %>%
filter(gender == 0) %>% #only female subjects
select(pitch) %>%
pull() %>%
mean()
138.9 + 108.01
df %>%
filter(gender == 1) %>% #only male subjects
select(pitch) %>% #get the column with pitch information
pull() %>% #pull it from the data frame
mean() #take the mean of this vector
residuals(pitch_model)
summary(pitch_model)
pitch_model <- lm(formula = pitch ~ 1 + gender,
data    = df)
summary(pitch_model)
residuals(pitch_model)
plot(residuals(pitch_model))
summary(pitch_model)
p2 <- lm(formula = pitch ~ 1 + gender + context, data=df)
p2
head(df)
p2
summary(p2)
p1 <- lm(formula = pitch ~ 1 + context, data=df)
p1
summary(p1)
p1 <- lm(formula = pitch ~ 1 + gender * context, data=df)
p1
p
p1
summary(p1)
df
p2
plot(residuals(p2))
df
148.41+108.35-19.55
df %>% filter(gender == 1, context == 'pol') %>% select(pitch) %>% pull() %>% mean()
p2
p1 <- lm(formula = pitch ~ 1 + gender * context, data=df)
p1
summary(p1)
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.6, position='identity') +
theme_minimal()
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.6, position='identity') +
theme_minimal()
### Packages we will use ###
library(readr)
library(dplyr)
library(ggplot2)
### ### ###
df <- read_csv("https://tinyurl.com/polite-data") #download data
glimpse(df) #get a look at the data
ggplot(df, aes(x = pitch, fill = gender)) +
geom_histogram(bins=70, alpha=0.6, position='identity') +
theme_minimal()
ggplot(df, aes(x = pitch, fill = context)) +
geom_histogram(bins=70, alpha=0.6, position='identity') +
theme_minimal()
ggplot(df, aes(x = pitch, fill = context)) +
geom_histogram(bins=50, alpha=0.6, position='identity') +
theme_minimal()
df %>% group_by(context) %>% mean()
df %>% group_by(context) %>% summary()
df %>% group_by(context) %>% summarize()
df %>% group_by(context) %>% summarize(mean = mean())
df %>%
filter(context == 'inf') %>%
pull() %>%
mean()
mean_informal <- df %>%
filter(context == 'inf') %>%
pull() %>%
mean()
mean_polite <- df %>%
filter(context == 'pol') %>%
pull() %>%
mean()
mean_informal
mean_polite
mean_informal - mean_polite
pitch_model2 <- lm(formula = pitch ~ 1 + gender + context)
pitch_model2 <- lm(formula = pitch ~ 1 + gender + context,
data    = df)
summary(pitch_model2)
cor(df$context,df$gender)
clear
summary(p1)
ggplot(data = df, aes(x = gender, y = pitch)) + geom_boxplot()
df %>%
group_by(gender) %>%
ggplot(data = df, aes(x = gender, y = pitch)) +
geom_boxplot()
df %>%
group_by(gender) %>%
ggplot(aes(x = gender, y = pitch)) +
geom_boxplot()
df %>%
group_by(gender) %>%
ggplot(aes(x = context, y = pitch)) +
geom_boxplot()
ggplot(data = df, aes(x = gender, y = pitch, fill = context)) +
geom_boxplot()
ggplot(data = df, aes(x = gender, y = pitch, fill = context)) +
geom_boxplot() +
theme_minimal()
pitch_model3 <- lm(formula = pitch ~ 1 + gender * context,
data    = df)
summary(pitch_model3)
pitch_model4 <- lm(formula = pitch ~ 1 + gender:context,
data    = df)
summary(pitch_model4)
pitch_model4 <- lm(formula = pitch ~ gender:context,
data    = df)
summary(pitch_model4)
pitch_model4 <- lm(formula = pitch ~ gender|context,
data    = df)
pitch_model4 <- lm(formula = pitch ~ gender||context,
data    = df)
pitch_model4 <- lm(formula = pitch ~ gender:context,
data    = df)
summary(pitch_model4)
pitch_model3
summary(pitch_model3)
xaringan:::inf_mr()
df
set.seed(120)
library(readr)
df <- read_csv("https://tinyurl.com/polite-data") %>% #download data
mutate(context = as.factor(context),
gender =  as.factor(gender))
df$ctx = ifelse(df$context == 'pol', 1, 0)
ggplot(df, aes(x = ctx , y = pitch)) +
geom_point() +
geom_smooth(method='lm') +
theme_minimal(base_size=25) +
xlab('contexto (x)') +
ylab('tono (y)')
xaringan:::inf_mr()
df
lm(df$pitch ~ df$ages)
lm(df$pitch ~ df$ages)
m <- lm(df$pitch ~ df$ages)
set.seed(121)
ages <- rpois(n=100, lambda=20)
pitch <- 160 - (3 * ages) + rnorm(n=100,mean=0,sd=30)
df <- data.frame(ages = ages, pitch = pitch)
m <- lm(df$pitch ~ df$ages)
m
coef(m)
coef(m)[[1]]
df$ages
head(df)
nrow(df)
nrow(df)
summary(df)
head(df)
lm(df$pitch ~ df$ages)
xaringan:::inf_mr()
xaringan:::inf_mr()
library(xaringanBuilder)
build_pdf("slides.html")
install.packages("Hmisc")
library(readr)
library(dplyr)
library(knitr)
library(kableExtra)
library(tidyr)
library(Hmisc) #for significance
overext <- read_csv('../data/overextension/overextension_pairs.csv)
''
'
overext <- read_csv('../data/overextension/overextension_pairs.csv')
setwd('multiModalChildColex/reports/')
library(xaringanBuilder)
build_pdf('slides.Rmd')
library(xaringanBuilder)
build_pdf('slides.Rmd')
library(xaringanBuilder)
build_pdf('slides.Rmd')
